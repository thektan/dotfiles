#!/usr/bin/env bash

# `a` with no arguments opens the current directory in Atom Editor, otherwise
# opens the given location
# @source https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function a() {
	if [ $# -eq 0 ]; then
		atom .;
	else
		atom "$@";
	fi;
}

# For Atom Beta
function b() {
	if [ $# -eq 0 ]; then
		atom-beta .;
	else
		atom-beta "$@";
	fi;
}

# `c` with no arguments opens the current directory in VSCode, otherwise
# opens the given location
function c() {
	if [ $# -eq 0 ]; then
		code .;
	else
		code "$@";
	fi;
}

# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
# @source https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function s() {
	if [ $# -eq 0 ]; then
		subl .;
	else
		subl "$@";
	fi;
}

# `o` with no arguments opens the current directory, otherwise opens the given
# location
# @source https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function o() {
	if [ $# -eq 0 ]; then
		open .;
	else
		open "$@";
	fi;
}

# Function to shorten `yarn` command and allows to add commands after `yarn`.
function y() {
	if [ $# -eq 0 ]; then
		yarn;
	else
		yarn "$@";
	fi;
}

# Make a new directory and cd into it.
# @source https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Syntax-highlight JSON strings or files
# Usage: `json '{"foo":42}'` or `echo '{"foo":42}' | json`
# @source https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function json() {
	if [ -t 0 ]; then # argument
		python -mjson.tool <<< "$*" | pygmentize -l javascript;
	else # pipe
		python -mjson.tool | pygmentize -l javascript;
	fi;
}

# Determine size of a file or total size of a directory
# @source https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

# Quickly open dropbox paper documents
function p() {
	if [ -n "$1" ]; then
		local document_name="/docs"

		if [[ "$1" == "index" ]]; then
			document_name="/doc/Index-2017-PUi7VDxAFK45bn9W0JLlg"
		elif [[ "$1" == "taste" ]]; then
			document_name="/doc/Brainstorm-1sFpGjI9gclozfqB8fSoG"
		elif [[ "$1" == "refs" ]]; then
			document_name="/folder/show/-References-e.iX7ZavGxujPFwhjOZcQrZBj3wNHkyDyoc9qqXSvKQjChbogrYK"
		fi

		open -a 'Google Chrome' https://paper.dropbox.com$document_name;
	else
		open -a 'Google Chrome' https://paper.dropbox.com;
	fi
}

# Sorts files into folders according to the file name.
# @source https://github.com/thektan/filesort
function filesort() {
	cd /Users/ktan/Projects/filesort;

	if [ $# -eq 0 ]; then
		java FileSort;
	else
		java FileSort "$@";
	fi;
}

# Update dotfiles
function update_dotfiles() {
	cd $DOTFILES;
	git checkout master;
	git pull origin;
}

# Update global packages
function update() {
	local green=`tput setaf 2`
	local blue=`tput setaf 4`
	local reset=`tput sgr0`

	echo "${blue}â–¸ (1/5) Update dotfiles ${reset}"
	update_dotfiles;

	echo "${blue}â–¸ (2/5) Update Brew Formulas ${reset}"
	brew update;
	brew upgrade;
	brew cleanup;

	echo "${blue}â–¸ (3/5) Update Outdated Brew Casks ${reset}"
	brew cask outdated | xargs brew cask reinstall;

	echo "${blue}â–¸ (4/5) Update Yarn ${reset}"
	yarn global upgrade;

	echo "${blue}â–¸ (5/5) Update NPM ${reset}"
	npm install npm -g;
	npm update -g;

	echo "${green}âœ“ Update Complete! ðŸŽ‰ ${reset}"
}
